---
import Icon from "./Icon.astro";
export interface Props {
	title: string;
	description: string;
	href: string;
	author: string;
	date: string;
	body: string;
	searchParams: string;
}

let { href, title, description, body, author, date, searchParams } =
	Astro.props;

const checkFor = ["RNDr.", "Mgr.", "Ing.", "Bc.", "Doc.", "PaeDr."];

let sureLevel: number = 0;
let authorMaybe: string;
for (let i = 0; i < checkFor.length; i++) {
	let str = checkFor[i];
	const lastIndexOf = body.lastIndexOf(str);
	const substring = body.substring(lastIndexOf);
	const before = body.charAt(lastIndexOf > 0 ? lastIndexOf - 1 : 0);
	if (lastIndexOf < 0) continue;
	if (lastIndexOf > body.length / 2) {
		sureLevel = 1;
		if (before == ">") sureLevel++;
		const end = substring.indexOf("</");
		if (end < 0) continue;
		if (end > 8) sureLevel++;
		const name = substring.substring(0, end);
		authorMaybe = name;

		break;
	} else if (lastIndexOf > body.length / 3) {
		sureLevel = 0;
		if (before == ">") sureLevel++;
		const end = substring.indexOf("</");
		if (end < 0) continue;
		if (end > 8) sureLevel++;
		const name = substring.substring(0, end);
		authorMaybe = name;
		break;
	}
}

const shouldMaybeShowNewAuthor: boolean = authorMaybe != undefined;
let job: string;
let titleAuthor: string = "ředitelství";
if (authorMaybe && authorMaybe.includes(", ")) {
	job = authorMaybe.split(", ")[1];
	authorMaybe = authorMaybe.split(", ")[0];
}

if (shouldMaybeShowNewAuthor)
	titleAuthor =
		(job ? job : "") +
		" (úroveň predikce učitele na základě obsahu: " +
		sureLevel +
		" ze 3)";

let noShout = false;
let noShoutTitle: string;
if (title.toUpperCase() == title) {
	noShout = true;
	noShoutTitle =
		title.charAt(0).toUpperCase() + title.substring(1).toLocaleLowerCase();
}

// translate href
const translatedHref = "/articles/" + href.split("/")[3] + searchParams;
---

<article>
	<div>
		<h2>
			<a href={translatedHref} set:html={noShout ? noShoutTitle : title} />
			{
				noShout ? ( <>{" "}</>
					<Icon
						src="/question.svg"
						title="Titulek předělaný, aby učitel nepoužíval jen capslock (může obsahovat chyby)"
						href="/info#capslockfuj"
						blank
					/>
				) : undefined
			}
		</h2>
	</div>
	<div class="article-info">
		<span
			>{
				shouldMaybeShowNewAuthor ? (
					<>
						<>{authorMaybe + " "}</>
						<Icon
							src="/question.svg"
							title={titleAuthor}
							href="/info#odhadnutiautora"
							blank
						/>
					</>
				) : (
					author.replace("Administ", "Ředitelství")
				)
			}</span
		>
		<span>{new Date(date).toLocaleDateString("cs-CZ")}</span>
	</div>
	<div class="article-content load">Načítání</div>

	<temp aria-hidden hidden data-body={body}></temp>
</article>

<style type="scss">
	.article-content {
		margin-bottom: 0px;
		max-width: 90vw;
	}

	.article-info {
		display: flex;
		justify-content: space-between;
		width: 100%;
		flex-direction: row;
		font-weight: 600;
	}

	.article-content > a {
		color: cyan;
		text-decoration: none;
	}

	.load::after {
		content: "";
		animation: loading infinite linear 1s;
	}

	@keyframes loading {
		0% {
			content: ".";
		}

		33% {
			content: "..";
		}

		66% {
			content: "...";
		}
	}
</style>
<script>
	document.addEventListener("astro:page-load", async () => {
		const blockedElements = ["iframe", "script", "hr"];

		const allowedAttributes = [
			"width",
			"height",
			"alt",
			"target",
			"href",
			"src",
			"srcset",
		];

		let i = 0;
		document.querySelectorAll("temp").forEach((temp) => {
			const html = temp.getAttribute("data-body");
			const parser = new DOMParser();
			const doc = parser
				.parseFromString(html, "text/html")
				.querySelector("*");
			temp.remove();

			doc.querySelectorAll("*").forEach((el) => {
				if (blockedElements.includes(el.tagName.toLowerCase())) {
					el.remove();
				}
				Object.values(el.attributes).forEach(({ name }) => {
					if (!allowedAttributes.includes(name))
						el.removeAttribute(name);
				});

				if (el instanceof HTMLAnchorElement) {
					el.target = "_blank noreferer noopener";
				}

				if (el instanceof HTMLImageElement) {
					el.loading = "lazy";
					el.style.maxHeight = "30vh";
					el.style.width = "auto";

					if (el.src.includes("emoji")) {
						el.style.width = "1em";
						el.style.height = "1em";
					}
				}
			});

			let gallery = [];
			let delLists = [];
			doc.querySelectorAll("li > img").forEach((el) => {
				gallery.push(el);
				if (!delLists.includes(el.parentElement.parentElement)) {
					delLists.push(el.parentElement.parentElement);
				}
			});

			if (gallery.length > 0) {
				const dialog = document.createElement("dialog");
				const h2 = document.createElement("h2");
				h2.innerText = "Galerie přízpěvku";
				const div = document.createElement("div");
				div.style.maxHeight = "70vh";
				dialog.style.minWidth = "30vw";
				dialog.style.textAlign = "center";

				const left = document.createElement("input");
				const right = document.createElement("input");
				left.value = "<";
				left.type = "button";
				right.value = ">";
				right.type = "button";

				const close = document.createElement("input");
				close.type = "button";
				close.value = "Zavřít";
				close.onclick = () => dialog.close();

				dialog.appendChild(h2);
				dialog.appendChild(div);
				dialog.appendChild(left);
				dialog.appendChild(right);
				dialog.appendChild(close);

				doc.appendChild(dialog);

				let x = 1;
				gallery.forEach((el) => {
					el.style.height = "auto";
					el.title = "Obrázek " + x;
					if (x != 1) el.hidden = true;
					div.appendChild(el);
					x++;
				});

				let index = 0;
				let prev = gallery[0];
				const update = () => {
					prev.hidden = true;
					prev = gallery[index];
					prev.hidden = false;
				};

				right.onclick = () => {
					index++;

					if (index >= gallery.length) {
						index = 0;
					}

					update();
				};

				left.onclick = () => {
					index--;

					if (index < 0) {
						index = gallery.length - 1;
					}

					update();
				};

				delLists.forEach((el) => {
					el.remove();
				});

				const open = document.createElement("input");
				open.type = "button";
				open.value = "Zobrazit galerii";
				open.onclick = () => {
					dialog.showModal();
				};

				doc.appendChild(open);
			}
			const content = document.querySelectorAll(".article-content")[i];
			content.innerHTML = "";
			content.appendChild(doc);
			content.classList.remove("load");
			i++;
		});
	});
</script>
